class
 refid "tribulle.utils:UtilTribu"
 instance QName(PackageNamespace("tribulle.utils"), "UtilTribu")
  extends QName(PackageNamespace(""), "Object")
  flag SEALED
  iinit
   refid "tribulle.utils:UtilTribu/iinit"
   body
    maxstack 1
    localcount 1
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlocal0
     constructsuper      0

     returnvoid
    end ; code
   end ; body
  end ; method
 end ; instance
 cinit
  refid "tribulle.utils:UtilTribu/cinit"
  body
   maxstack 0
   localcount 1
   initscopedepth 0
   maxscopedepth 0
   code
    returnvoid
   end ; code
  end ; body
 end ; method
 trait slot QName(PackageNamespace(""), "TAILLE_MAX_NOM_JOUEUR") type QName(PackageNamespace(""), "int") value Integer(20) end
 trait slot QName(PackageNamespace(""), "TAILLE_MAX_NOM_TRIBU") type QName(PackageNamespace(""), "int") value Integer(50) end
 trait slot QName(PackageNamespace(""), "TAILLE_MAX_NOM_RANG_TRIBU") type QName(PackageNamespace(""), "int") value Integer(20) end
 trait slot QName(PackageNamespace(""), "TAILLE_MAX_MESSAGE_ACCUEIL") type QName(PackageNamespace(""), "int") value Integer(5000) end
 trait slot QName(PrivateNamespace(null, "tribulle.utils:UtilTribu#0"), "RANG_INCONNU") type QName(PackageNamespace("tribulle.auto.protocole.type"), "TT_Rang") end
 trait method QName(PackageNamespace(""), "getRangInconnu")
  method
   refid "tribulle.utils:UtilTribu/getRangInconnu"
   returns QName(PackageNamespace("tribulle.auto.protocole.type"), "TT_Rang")
   body
    maxstack 9
    localcount 6
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     pushbyte            0
     setlocal3

     pushbyte            0
     setlocal1

     getlex              QName(PrivateNamespace(null, "tribulle.utils:UtilTribu#0"), "RANG_INCONNU")
     pushnull
     ifne                L57

     pushbyte            0
     setlocal3

     pushbyte            0
     setlocal            5

     getlex              QName(PackageNamespace("tribulle.serveur.auto.metadonnees"), "MetadonneesDroitTribu")
     getproperty         QName(PackageNamespace(""), "_ids")
     setlocal            4

     jump                L24

L17:
     label
     getlocal            4
     getlocal            5
     nextvalue
     coerce              QName(PackageNamespace("tribulle.serveur.auto.metadonnees"), "MetadonneesDroitTribu")
     setlocal2

     inclocal_i          3
L24:
     hasnext2            4, 5
     iftrue              L17

     findpropstrict      QName(PackageNamespace("tribulle.auto.protocole.type"), "TT_Rang")
     pushbyte            0
     pushstring          ""
     pushtrue
     pushshort           999
     pushbyte            0
     getlex              QName(PackageNamespace("__AS3__.vec"), "Vector")
     getlex              QName(PackageNamespace(""), "Boolean")
     applytype           1
     getlocal3
     pushtrue
     construct           2
     constructprop       QName(PackageNamespace("tribulle.auto.protocole.type"), "TT_Rang"), 6
     findproperty        QName(PrivateNamespace(null, "tribulle.utils:UtilTribu#0"), "RANG_INCONNU")
     swap
     setproperty         QName(PrivateNamespace(null, "tribulle.utils:UtilTribu#0"), "RANG_INCONNU")

     pushbyte            0
     setlocal1

     jump                L52

L45:
     label
     getlex              QName(PrivateNamespace(null, "tribulle.utils:UtilTribu#0"), "RANG_INCONNU")
     getproperty         QName(PackageNamespace(""), "activationDroits")
     getlocal1
     pushfalse
     setproperty         MultinameL([PrivateNamespace(null, "tribulle.utils:UtilTribu#0"), StaticProtectedNs("tribulle.utils:UtilTribu"), StaticProtectedNs("Object"), PackageNamespace("tribulle.utils"), PackageInternalNs("tribulle.utils"), PrivateNamespace(null, "tribulle.utils:UtilTribu#1"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])

     inclocal_i          1
L52:
     getlocal1
     getlocal3
     pushbyte            1
     add
     iflt                L45

L57:
     getlex              QName(PrivateNamespace(null, "tribulle.utils:UtilTribu#0"), "RANG_INCONNU")
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "possedeDroit")
  method
   refid "tribulle.utils:UtilTribu/possedeDroit"
   param QName(PackageNamespace("tribulle.auto.protocole.type"), "TT_Rang")
   param QName(PackageNamespace("tribulle.serveur.auto.metadonnees"), "MetadonneesDroitTribu")
   returns QName(PackageNamespace(""), "Boolean")
   body
    maxstack 2
    localcount 3
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlocal1
     pushnull
     equals
     not
     dup
     iffalse             L15

     pop
     getlocal1
     getproperty         QName(PackageNamespace(""), "activationDroits")
     getproperty         QName(PackageNamespace(""), "length")
     getlocal2
     getproperty         QName(PackageNamespace(""), "id")
     greaterthan
L15:
     dup
     iffalse             L24

     pop
     getlocal1
     getproperty         QName(PackageNamespace(""), "activationDroits")
     getlocal2
     getproperty         QName(PackageNamespace(""), "id")
     getproperty         MultinameL([PrivateNamespace(null, "tribulle.utils:UtilTribu#0"), StaticProtectedNs("tribulle.utils:UtilTribu"), StaticProtectedNs("Object"), PackageNamespace("tribulle.utils"), PackageInternalNs("tribulle.utils"), PrivateNamespace(null, "tribulle.utils:UtilTribu#1"), PackageNamespace(""), Namespace("http://adobe.com/AS3/2006/builtin")])
     convert_b
L24:
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "getRangDepuisNom")
  method
   refid "tribulle.utils:UtilTribu/getRangDepuisNom"
   param QName(PackageNamespace(""), "String")
   param TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PackageNamespace("tribulle.auto.protocole.type"), "TT_Rang")>)
   returns QName(PackageNamespace("tribulle.auto.protocole.type"), "TT_Rang")
   body
    maxstack 3
    localcount 6
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     pushbyte            0
     setlocal            5

     getlocal2
     setlocal            4

     jump                L19

L7:
     label
     getlocal            4
     getlocal            5
     nextvalue
     coerce              QName(PackageNamespace("tribulle.auto.protocole.type"), "TT_Rang")
     setlocal3

     getlocal3
     getproperty         QName(PackageNamespace(""), "nom")
     getlocal1
     ifne                L19

     getlocal3
     returnvalue

L19:
     hasnext2            4, 5
     iftrue              L7

     getlex              QName(PackageNamespace("lapitchnet.log"), "Logger")
     pushstring          "Rang "
     getlocal1
     add
     pushstring          " non trouvé !"
     add
     pushstring          "ERREUR"
     callpropvoid        QName(PackageNamespace(""), "flashTrace"), 2

     pushnull
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "getRangDepuisId")
  method
   refid "tribulle.utils:UtilTribu/getRangDepuisId"
   param QName(PackageNamespace(""), "int")
   param TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PackageNamespace("tribulle.auto.protocole.type"), "TT_Rang")>)
   returns QName(PackageNamespace("tribulle.auto.protocole.type"), "TT_Rang")
   body
    maxstack 3
    localcount 6
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     pushbyte            0
     setlocal            5

     getlocal2
     setlocal            4

     jump                L19

L7:
     label
     getlocal            4
     getlocal            5
     nextvalue
     coerce              QName(PackageNamespace("tribulle.auto.protocole.type"), "TT_Rang")
     setlocal3

     getlocal3
     getproperty         QName(PackageNamespace(""), "id")
     getlocal1
     ifne                L19

     getlocal3
     returnvalue

L19:
     hasnext2            4, 5
     iftrue              L7

     getlex              QName(PackageNamespace("lapitchnet.log"), "Logger")
     pushstring          "Rang "
     getlocal1
     add
     pushstring          " non trouvé !"
     add
     pushstring          "ERREUR"
     callpropvoid        QName(PackageNamespace(""), "flashTrace"), 2

     pushnull
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "getRangDepuisOrdre")
  method
   refid "tribulle.utils:UtilTribu/getRangDepuisOrdre"
   param QName(PackageNamespace(""), "int")
   param TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PackageNamespace("tribulle.auto.protocole.type"), "TT_Rang")>)
   returns QName(PackageNamespace("tribulle.auto.protocole.type"), "TT_Rang")
   body
    maxstack 3
    localcount 6
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     pushbyte            0
     setlocal            5

     getlocal2
     setlocal            4

     jump                L19

L7:
     label
     getlocal            4
     getlocal            5
     nextvalue
     coerce              QName(PackageNamespace("tribulle.auto.protocole.type"), "TT_Rang")
     setlocal3

     getlocal3
     getproperty         QName(PackageNamespace(""), "ordre")
     getlocal1
     ifne                L19

     getlocal3
     returnvalue

L19:
     hasnext2            4, 5
     iftrue              L7

     getlex              QName(PackageNamespace("lapitchnet.log"), "Logger")
     pushstring          "Rang "
     getlocal1
     add
     pushstring          " non trouvé !"
     add
     pushstring          "ERREUR"
     callpropvoid        QName(PackageNamespace(""), "flashTrace"), 2

     pushnull
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "getRangLePlusBas")
  method
   refid "tribulle.utils:UtilTribu/getRangLePlusBas"
   param TypeName(QName(PackageNamespace("__AS3__.vec"), "Vector")<QName(PackageNamespace("tribulle.auto.protocole.type"), "TT_Rang")>)
   returns QName(PackageNamespace("tribulle.auto.protocole.type"), "TT_Rang")
   body
    maxstack 2
    localcount 7
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     pushbyte            0
     setlocal            4

     pushnull
     coerce              QName(PackageNamespace("tribulle.auto.protocole.type"), "TT_Rang")
     setlocal2

     pushbyte            0
     setlocal            6

     getlocal1
     setlocal            5

     jump                L28

L12:
     label
     getlocal            5
     getlocal            6
     nextvalue
     coerce              QName(PackageNamespace("tribulle.auto.protocole.type"), "TT_Rang")
     setlocal3

     getlocal3
     getproperty         QName(PackageNamespace(""), "ordre")
     getlocal            4
     ifngt               L28

     getlocal3
     setlocal2

     getlocal2
     getproperty         QName(PackageNamespace(""), "ordre")
     convert_i
     setlocal            4

L28:
     hasnext2            5, 6
     iftrue              L12

     getlocal2
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "estEnLigne")
  method
   refid "tribulle.utils:UtilTribu/estEnLigne"
   param QName(PackageNamespace("tribulle.type"), "MembreTribu")
   returns QName(PackageNamespace(""), "Boolean")
   body
    maxstack 2
    localcount 2
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlocal1
     pushnull
     equals
     not
     dup
     iffalse             L12

     pop
     getlocal1
     getproperty         QName(PackageNamespace(""), "online")
     convert_b
L12:
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "rangUtilisateurSuperieur")
  method
   refid "tribulle.utils:UtilTribu/rangUtilisateurSuperieur"
   param QName(PackageNamespace("tribulle.auto.protocole.type"), "TT_Rang")
   param QName(PackageNamespace("tribulle.auto.protocole.type"), "TT_Rang")
   returns QName(PackageNamespace(""), "Boolean")
   body
    maxstack 2
    localcount 3
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlocal2
     pushnull
     equals
     not
     dup
     iffalse             L22

     pop
     getlocal1
     getproperty         QName(PackageNamespace(""), "ordre")
     getlocal2
     getproperty         QName(PackageNamespace(""), "ordre")
     lessthan
     dup
     iftrue              L21

     pop
     getlocal1
     getproperty         QName(PackageNamespace(""), "ordre")
     pushbyte            1
     equals
L21:
     convert_b
L22:
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "traceMembreTribu")
  method
   refid "tribulle.utils:UtilTribu/traceMembreTribu"
   param QName(PackageNamespace("tribulle.auto.protocole.type"), "TT_MembreTribu")
   returns QName(PackageNamespace(""), "void")
   body
    maxstack 4
    localcount 2
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlex              QName(PackageNamespace(""), "trace")
     getglobalscope
     pushstring          "TT_MembreTribu{idMembre="
     getlocal1
     getproperty         QName(PackageNamespace(""), "id")
     convert_s
     add
     pushstring          ",nom="
     add
     getlocal1
     getproperty         QName(PackageNamespace(""), "nom")
     convert_s
     add
     pushstring          ",idRang="
     add
     getlocal1
     getproperty         QName(PackageNamespace(""), "idRang")
     convert_s
     add
     pushstring          ",dateEntreeTribu="
     add
     getlocal1
     getproperty         QName(PackageNamespace(""), "dateEntreeTribu")
     convert_s
     add
     pushstring          ",dateDerniereConnexion="
     add
     getlocal1
     getproperty         QName(PackageNamespace(""), "dateDerniereConnexion")
     convert_s
     add
     pushstring          "}"
     add
     call                1
     returnvoid
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "traceRang")
  method
   refid "tribulle.utils:UtilTribu/traceRang"
   param QName(PackageNamespace("tribulle.auto.protocole.type"), "TT_Rang")
   returns QName(PackageNamespace(""), "void")
   body
    maxstack 4
    localcount 2
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlex              QName(PackageNamespace(""), "trace")
     getglobalscope
     pushstring          "TT_Rang{id="
     getlocal1
     getproperty         QName(PackageNamespace(""), "id")
     convert_s
     add
     pushstring          ",rang="
     add
     getlocal1
     getproperty         QName(PackageNamespace(""), "nom")
     convert_s
     add
     pushstring          ",ordre="
     add
     getlocal1
     getproperty         QName(PackageNamespace(""), "ordre")
     convert_s
     add
     pushstring          ",activationDroits="
     add
     getlocal1
     getproperty         QName(PackageNamespace(""), "activationDroits")
     callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "toString"), 0
     add
     pushstring          "}"
     add
     call                1
     returnvoid
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "getNomCanalServeur")
  method
   refid "tribulle.utils:UtilTribu/getNomCanalServeur"
   param QName(PackageNamespace(""), "String")
   returns QName(PackageNamespace(""), "String")
   body
    maxstack 2
    localcount 2
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     pushstring          "~"
     getlocal1
     add
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "getNomCanalClient")
  method
   refid "tribulle.utils:UtilTribu/getNomCanalClient"
   param QName(PackageNamespace(""), "String")
   returns QName(PackageNamespace(""), "String")
   body
    maxstack 2
    localcount 2
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlex              QName(PackageNamespace("lapitchnet.langues"), "MoteurLangueTribulle")
     pushstring          "texte.tribu"
     callproperty        QName(PackageNamespace(""), "recupTexte"), 1
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "tronquerMessageAccueil")
  method
   refid "tribulle.utils:UtilTribu/tronquerMessageAccueil"
   param QName(PackageNamespace(""), "String")
   param QName(PackageNamespace(""), "Boolean")
   returns QName(PackageNamespace(""), "String")
   body
    maxstack 4
    localcount 3
    initscopedepth 0
    maxscopedepth 1
    code
     getlocal0
     pushscope

     getlocal1
     getproperty         QName(PackageNamespace(""), "length")
     getlex              QName(PackageNamespace(""), "TAILLE_MAX_MESSAGE_ACCUEIL")
     ifngt               L24

     getlocal2
     iffalse             L18

     getlocal1
     pushbyte            0
     getlex              QName(PackageNamespace(""), "TAILLE_MAX_MESSAGE_ACCUEIL")
     pushbyte            3
     subtract
     callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "substring"), 2
     pushstring          "..."
     add
     setlocal1

     jump                L24

L18:
     getlocal1
     pushbyte            0
     getlex              QName(PackageNamespace(""), "TAILLE_MAX_MESSAGE_ACCUEIL")
     callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "substring"), 2
     coerce_s
     setlocal1

L24:
     getlocal1
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
end ; class
